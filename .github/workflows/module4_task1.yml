---
name: module4_task1
on:   # yamllint disable-line rule:truthy
  push:
    branches:
      - master
    tags:
      - "1.0.1"
  pull_request:
    types: [opened, reopened, synchronize]
  schedule:
    - cron: '0 0 * * *'   # Runs everyday at 00:00

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ''
      - name: create image
        run: make build-docker

      - name: test & validate
        run: |
        cd module4_task1/ && 
        make help
        make build
        make lint
        make validate
        make unit-tests
        make integration-tests

      - name: zip package
        run: make package

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package-zip
          path: module4_task1/awesome-website.zip

      - name: add content
        run: cat ./module4_task0/DEPLOY.md >> Release.txt

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/1.0.1')
        with:
          files: |
            Release.txt
            awesome-website.zip
            DEPLOY.md
          body: |
            ## What is in the archive and how to unarchive it?
            ## What are the commands to start and stop the application?
            ## How to customize where the application logs are written?
            ## How to “quickly” verify that the application is running?
            ## How to create a release with the archive triggered by a tag?
      - run: gh release create v1.0.1 --title "v1.0.1"
            --notes DEPLOY.md 2>/dev/null || echo "OK"

      - name: Deploy to Netlify host
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: 'module4_task0/dist'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
